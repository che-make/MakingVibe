<!--
 * MakingVibe/MainWindow.xaml
 * Includes status bar updates for LOC and Char count.
 -->
<Window x:Class="MakingVibe.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MakingVibe"
        xmlns:models="clr-namespace:MakingVibe.Models"
        mc:Ignorable="d"
        Height="650" Width="950"
        Icon="./makingvibe.ico"
        Loaded="Window_Loaded"> <!-- Add Loaded event -->

    <!-- Add Keyboard Shortcuts -->
    <Window.InputBindings>
        <KeyBinding Key="F5" Command="{Binding RefreshCommand}" />
        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}" />
        <!-- Add more bindings for Copy, Cut, Paste, Rename if desired -->
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" /> <!-- Row for Status Bar -->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="350" /> <!-- Increased width for tree view -->
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- Aside - Panel lateral con árbol de directorios -->
        <Grid Grid.Row="0" Grid.Column="0" Background="#F0F0F0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" /> <!-- Row for Clear Selection Button -->
            </Grid.RowDefinitions>

            <!-- Modified StackPanel to include Collapse/Expand buttons -->
            <StackPanel Grid.Row="0" Margin="10">
                <TextBlock Text="Explorador de Archivos" FontWeight="Bold" FontSize="16" Margin="0,0,0,5" />
                <Button x:Name="btnSelectRoot" Content="Seleccionar Carpeta Raíz" Margin="0,0,0,5" Padding="5"
                        Click="btnSelectRoot_Click" ToolTip="Seleccionar la carpeta base del proyecto"/>
                <!-- Wrap buttons for better layout -->
                <WrapPanel Orientation="Horizontal" Margin="0,0,0,5">
                     <Button x:Name="btnCollapseAll" Content="Contraer Todo" Margin="0,0,5,2" Padding="5"
                            Click="btnCollapseAll_Click" ToolTip="Contraer todos los directorios en el árbol"/>
                     <Button x:Name="btnExpandAll" Content="Expandir Todo" Margin="0,0,5,2" Padding="5"
                             Click="btnExpandAll_Click" ToolTip="Expandir todos los directorios en el árbol (puede tardar si hay muchos)"/>
                     <Button x:Name="btnCollapseCurrent" Content="Contraer Actual" Margin="0,0,5,2" Padding="5"
                             Click="btnCollapseCurrent_Click" ToolTip="Contraer el directorio seleccionado" IsEnabled="False"/>
                     <Button x:Name="btnExpandCurrent" Content="Expandir Actual" Margin="0,0,0,2" Padding="5"
                             Click="btnExpandCurrent_Click" ToolTip="Expandir el directorio seleccionado" IsEnabled="False"/>
                </WrapPanel>
            </StackPanel>

            <!-- TreeView with Context Menu -->
            <TreeView x:Name="treeViewFiles" Grid.Row="1" Margin="10,0,10,10" BorderThickness="1" BorderBrush="#CCCCCC"
                      SelectedItemChanged="treeViewFiles_SelectedItemChanged"> <!-- Use SelectedItemChanged for preview -->
                <TreeView.ContextMenu>
                    <ContextMenu x:Name="treeViewContextMenu" StaysOpen="true" ContextMenuOpening="TreeViewContextMenu_ContextMenuOpening">
                         <MenuItem Header="Copiar Texto (AI)" x:Name="ctxCopyText" Click="btnCopyText_Click"/>
                         <MenuItem Header="Renombrar" x:Name="ctxRename" Click="btnRename_Click"/>
                         <MenuItem Header="Eliminar" x:Name="ctxDelete" Click="btnDelete_Click"/>
                         <Separator/>
                         <MenuItem Header="Refrescar Nodo" x:Name="ctxRefreshNode" Click="CtxRefreshNode_Click"/>
                         <MenuItem Header="Refrescar Todo (F5)" x:Name="ctxRefreshAll" Click="btnRefresh_Click"/>
                    </ContextMenu>
                </TreeView.ContextMenu>
                <!-- Style to increase spacing -->
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Padding" Value="2"/>
                        <Setter Property="Margin" Value="0,1"/>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>

             <!-- Clear Selection Button -->
            <Button x:Name="btnClearSelection" Grid.Row="2" Content="Limpiar Selección" Margin="10,0,10,10" Padding="5"
                    Click="btnClearSelection_Click" IsEnabled="{Binding ElementName=treeViewFiles, Path=HasItems}"/>

        </Grid>

        <!-- Main - Panel principal para mostrar contenido y acciones -->
        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Barra de herramientas con botones de acción -->
            <ToolBar Grid.Row="0" Background="#E0E0E0">
                 <Button x:Name="btnCopyText" Content="Copiar Texto (AI)" Margin="3" Padding="8,3" Click="btnCopyText_Click"
                        IsEnabled="False" FontWeight="Bold" ToolTip="Copia el mapa de archivos y el contenido de los archivos de texto seleccionados al portapapeles, precedido por el prompt principal y el texto de los fragmentos seleccionados."/>
                <Separator />
                <Button x:Name="btnCopy" Content="Copiar" Margin="3" Padding="8,3" Click="btnCopy_Click"
                        IsEnabled="False" ToolTip="Copiar archivos/carpetas seleccionados (Ctrl+C)" />
                <Button x:Name="btnCut" Content="Cortar" Margin="3" Padding="8,3" Click="btnCut_Click"
                        IsEnabled="False" ToolTip="Cortar archivos/carpetas seleccionados (Ctrl+X)"/>
                <Button x:Name="btnPaste" Content="Pegar" Margin="3" Padding="8,3" Click="btnPaste_Click"
                        IsEnabled="False" ToolTip="Pegar archivos/carpetas desde el portapapeles (Ctrl+V)"/>
                <Separator />
                <Button x:Name="btnDelete" Content="Eliminar" Margin="3" Padding="8,3" Click="btnDelete_Click"
                        IsEnabled="False" ToolTip="Eliminar archivos/carpetas seleccionados (Supr)"/>
                <Button x:Name="btnRename" Content="Renombrar" Margin="3" Padding="8,3" Click="btnRename_Click"
                        IsEnabled="False" ToolTip="Renombrar el archivo/carpeta seleccionado (F2)"/>
                <Separator />
                <Button x:Name="btnRefresh" Content="Refrescar Todo" Margin="3" Padding="8,3" Click="btnRefresh_Click" ToolTip="Recargar el árbol de directorios completo (F5)"/>
            </ToolBar>

            <!-- Panel principal para mostrar contenido -->
            <Grid Grid.Row="1" Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" x:Name="txtCurrentPath" Text="Ruta actual: (Seleccione una carpeta raíz)" FontWeight="SemiBold"
                           Margin="0,0,0,10" TextTrimming="CharacterEllipsis" ToolTip="{Binding Text, ElementName=txtCurrentPath}"/>

                <TabControl Grid.Row="1" x:Name="tabControlMain">
                    <TabItem Header="Vista Previa">
                        <TextBox x:Name="txtFileContent" IsReadOnly="True" AcceptsReturn="True"
                                 VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                                 FontFamily="Consolas" FontSize="12" BorderBrush="#CCCCCC" BorderThickness="1"/>
                    </TabItem>

                    <!-- Prompt Tab Layout -->
                    <TabItem Header="Prompt">
                         <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" MinHeight="100" /> <!-- Main Prompt -->
                                <RowDefinition Height="Auto" /> <!-- Separator -->
                                <RowDefinition Height="Auto" /> <!-- Fragment Add Area -->
                                <RowDefinition Height="*" MinHeight="150"/> <!-- Fragments List -->
                            </Grid.RowDefinitions>

                            <!-- Section 1: Main Prompt -->
                            <Grid Grid.Row="0" Margin="5,5,5,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="Prompt Principal:" FontWeight="SemiBold" Margin="0,0,0,5"/>
                                <TextBox Grid.Row="1" x:Name="txtMainPrompt" AcceptsReturn="True"
                                         VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                                         TextWrapping="Wrap"
                                         FontFamily="Consolas" FontSize="12" BorderBrush="#CCCCCC" BorderThickness="1"
                                         ToolTip="Introduce aquí el prompt principal que se añadirá ANTES del mapa de archivos al copiar texto para AI."/>
                            </Grid>

                             <!-- Separator -->
                             <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="LightGray" Margin="0,5"/>

                            <!-- Section 2: Add Fragment Area -->
                            <Grid Grid.Row="2" Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Título Fragmento:" VerticalAlignment="Center" Margin="0,0,5,5"/>
                                <TextBox Grid.Row="0" Grid.Column="1" x:Name="txtNewFragmentTitle" Padding="3" Margin="0,0,10,5"
                                         ToolTip="Título descriptivo para el fragmento (mostrado en la lista)"/>

                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Texto Fragmento:" VerticalAlignment="Top" Margin="0,0,5,5"/>
                                <TextBox Grid.Row="1" Grid.Column="1" x:Name="txtNewFragmentText" Padding="3" Margin="0,0,10,5" AcceptsReturn="True"
                                         Height="40" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap"
                                         ToolTip="Contenido real del fragmento (usado al copiar)" KeyDown="TxtNewFragmentText_KeyDown"/> <!-- Attached KeyDown here -->

                                <Button Grid.Row="1" Grid.Column="2" x:Name="btnAddFragment" Content="Añadir Fragmento" Padding="5,2" VerticalAlignment="Top"
                                        Click="AddFragment_Click"/>
                            </Grid>


                            <!-- Section 3: Fragments List -->
                            <Grid Grid.Row="3" Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/> <!-- Title -->
                                    <RowDefinition Height="*"/>    <!-- List -->
                                    <RowDefinition Height="Auto"/> <!-- Delete Button -->
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Text="Fragmentos Guardados (Seleccione para incluir):" FontWeight="SemiBold" Margin="0,5,0,5"/>

                                <!-- Added MouseDoubleClick handler -->
                                <ListView x:Name="listViewFragments" Grid.Row="1" ItemsSource="{Binding Fragments}"
                                          BorderBrush="#CCCCCC" BorderThickness="1"
                                          SelectionMode="Extended" HorizontalContentAlignment="Stretch"
                                          MouseDoubleClick="listViewFragments_MouseDoubleClick">
                                     <ListView.ItemTemplate>
                                        <DataTemplate DataType="{x:Type models:TextFragment}">
                                            <Grid HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <!-- Checkbox to control inclusion -->
                                                <CheckBox x:Name="cbIncludeFragment" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,8,0"
                                                          ToolTip="Incluir este fragmento al copiar"/>
                                                <!-- Display Title, ToolTip shows Text -->
                                                <TextBlock Grid.Column="1" Text="{Binding Title}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"
                                                           VerticalAlignment="Center" ToolTip="{Binding Text}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>

                                <Button x:Name="btnDeleteFragment" Grid.Row="2" Content="Eliminar Seleccionado(s)" Margin="0,10,0,0" Padding="5,2"
                                        HorizontalAlignment="Left" Click="DeleteFragment_Click"/>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <!-- MODIFICATION END -->

                    <!-- MODIFICATION START: Filter Tab -->
                    <TabItem Header="Filtros">
                         <Grid Margin="5">
                             <Grid.RowDefinitions>
                                 <RowDefinition Height="Auto"/> <!-- Buttons -->
                                 <RowDefinition Height="*"/>    <!-- Filter List -->
                             </Grid.RowDefinitions>

                             <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
                                 <Button x:Name="btnSelectAllFilters" Content="Seleccionar Todos" Padding="5,2" Margin="0,0,5,0" Click="SelectAllFilters_Click"/>
                                 <Button x:Name="btnDeselectAllFilters" Content="Deseleccionar Todos" Padding="5,2" Margin="0,0,5,0" Click="DeselectAllFilters_Click"/>
                                 <Button x:Name="btnApplyFilters" Content="Aplicar Filtros" Padding="5,2" FontWeight="Bold" Click="ApplyFilters_Click"/>
                                 <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" Foreground="Gray" Text="(Aplicar recarga el árbol con los filtros seleccionados)"/>
                             </StackPanel>

                             <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                                 <ListView x:Name="listViewFilters" ItemsSource="{Binding FileFilters}"
                                           BorderBrush="#CCCCCC" BorderThickness="1"
                                           SelectionMode="Single"> <!-- No selection needed, interaction via checkbox -->
                                     <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <!-- Remove default selection visuals -->
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListViewItem">
                                                        <ContentPresenter/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                     <ListView.ItemTemplate>
                                         <DataTemplate DataType="{x:Type models:FileFilterItem}">
                                             <CheckBox IsChecked="{Binding IsEnabled, Mode=TwoWay}"
                                                       Content="{Binding DisplayMember}"
                                                       Margin="2"/>
                                         </DataTemplate>
                                     </ListView.ItemTemplate>
                                 </ListView>
                             </ScrollViewer>
                         </Grid>
                    </TabItem>
                    <!-- MODIFICATION END -->

                </TabControl>
            </Grid>
        </Grid>

         <!-- Status Bar -->
        <StatusBar Grid.Row="1" Grid.ColumnSpan="2" Background="#E0E0E0">
            <StatusBarItem>
                <TextBlock x:Name="statusBarText" Text="Listo." />
            </StatusBarItem>
            <!-- MODIFICATION START: Replace single TextBlock with StackPanel -->
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock x:Name="statusSelectionCount" Text="Items: 0" Margin="0,0,10,0" ToolTip="Total selected items (files and directories)"/>
                    <TextBlock Text="|" Foreground="Gray" Margin="0,0,10,0"/>
                    <TextBlock x:Name="statusTotalLines" Text="LOC: 0" Margin="0,0,10,0" ToolTip="Total lines of code in selected text files"/>
                    <TextBlock Text="|" Foreground="Gray" Margin="0,0,10,0"/>
                    <TextBlock x:Name="statusTotalChars" Text="Chars: 0" Margin="0,0,10,0" ToolTip="Total characters in selected text files"/>
                </StackPanel>
            </StatusBarItem>
            <!-- MODIFICATION END -->
        </StatusBar>
    </Grid>
</Window>